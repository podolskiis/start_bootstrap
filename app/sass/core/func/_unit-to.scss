// Convert pixels to rems (edit all globally)
@function unit($pxval, $base: 16px) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1rem; // edit: px, em, rem
}


// Convert pixels to ems
@function ems($pxval, $base: $fz_base) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1em;
}


// Convert pixels to em
@function em($pxval, $base: 16px) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1em;
}


// Convert pixels to rems
@function rem($pxval, $base: 16px) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1rem;
}


// Convert rems to pixels
@function rem-to-px($pxval, $base: 16px) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval * $base) * 1px;
}


// Convert to pixels
@function px($pxval) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @return ($pxval) * 1px;
}
